@page "/account/register"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>

<div class="row">
    <div class="col-md-6">
        <h3>Register</h3>
        <EditForm Model="@registerModel" OnValidSubmit="HandleRegister" FormName="RegisterForm">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Email:</label>
                <InputText @bind-Value="registerModel.Email" class="form-control" />
            </div>

            <div class="form-group">
                <label>Password:</label>
                <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
            </div>

            <div class="form-group">
                <label>Confirm Password:</label>
                <InputText type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>
</div>

@code {
    private RegisterModel registerModel = new();
    private string? errorMessage;

    private async Task HandleRegister()
    {
        var user = new IdentityUser { UserName = registerModel.Email, Email = registerModel.Email };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            await SignInManager.SignInAsync(user, isPersistent: false);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Registration failed: " + string.Join(", ", result.Errors.Select(e => e.Description));
        }
    }

    public class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [StringLength(100, MinimumLength = 6)]
        public string Password { get; set; } = "";

        [Compare("Password")]
        public string ConfirmPassword { get; set; } = "";
    }
}